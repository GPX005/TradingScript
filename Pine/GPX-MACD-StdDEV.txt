//@version=5
//-------------------------------------------------------------------------------------------------------------------------------------------
//  Script Name:    GPX-I-MACD v2.0 Indicator (with N x StdvDeviation)
//  Ideal      :    Custom version of MACD for use with GPX Strategies
//  Author     :    Guy Pedashenko      Original creation date: 15-Jun-24       Latest version date: 02-Jul-24
//  Version    :    v2.11
//  Description:    MACD crossing.  N x Std Devation band lines (can adjust variable for Std Dev multiplier.)
//                                                                       
//-------------------------------------------------------------------------------------------------------------------------------------------// 80% defval
indicator(title="GPX-I-MACD V2.11", shorttitle="GPX-MACD", timeframe="", timeframe_gaps=true)

NumBars = input.int(title = "Number of Bars",  minval = 100, maxval = 4000, defval = 2000)    
nStdDevs = input.float(title = "Number of STD Deviations",  minval = 1, maxval = 10, defval = 2)    
// Getting inputs
fast_length = input(title = "Fast Length", defval = 12)
slow_length = input(title = "Slow Length", defval = 26)
src = input(title = "Source", defval = close)
signal_length = input.int(title = "Signal Smoothing",  minval = 1, maxval = 50, defval = 9, display = display.data_window)
sma_source = input.string(title = "Oscillator MA Type",  defval = "EMA", options = ["SMA", "EMA"], display = display.data_window)
sma_signal = input.string(title = "Signal Line MA Type", defval = "EMA", options = ["SMA", "EMA"], display = display.data_window)
// Calculating
fast_ma = sma_source == "SMA" ? ta.sma(src, fast_length) : ta.ema(src, fast_length)
slow_ma = sma_source == "SMA" ? ta.sma(src, slow_length) : ta.ema(src, slow_length)
macd = fast_ma - slow_ma
signal = sma_signal == "SMA" ? ta.sma(macd, signal_length) : ta.ema(macd, signal_length)
hist = macd - signal

// Calculate the upper and lower bands of the StdDev channel
stdDev = ta.stdev(macd, NumBars, false)
//upperBand = macd + (2 * stdDev)
//lowerBand = macd - (2 * stdDev)
upperBand = 0 + (nStdDevs * stdDev)
lowerBand = 0 - (nStdDevs * stdDev)
// Plot the MACD line and the channelplot(macdLine, title="MACD Line", color=color.blue)
plot(upperBand, title="Upper Band (2 Std Dev)", color= #899289)
plot(lowerBand, title="Lower Band (2 Std Dev)", color=#8b9c8c)
// ----------------------  LINES  ---------------------------------------
//var resistance = line.new(0, 0, 0, 0, xloc.bar_index, extend.none, na, line.style_solid, 1)
//var support = line.new(0, 0, 0, 0, xloc.bar_index, extend.none, na, line.style_solid, 1)

alertcondition(hist[1] >= 0 and hist < 0, title = 'Rising to falling', message = 'The MACD histogram switched from a rising to falling state')
alertcondition(hist[1] <= 0 and hist > 0, title = 'Falling to rising', message = 'The MACD histogram switched from a falling to rising state')

hline(0, "Zero Line", color = color.new(#787B86, 50))
//plot(hist, title = "Histogram", style = plot.style_columns, color = (hist >= 0 ? (hist[1] < hist ? #26A69A : #B2DFDB) : (hist[1] < hist ? #FFCDD2 : #FF5252)))
plot(macd,   title = "MACD",   color = #2962FF)
plot(signal, title = "Signal", color = #FF6D00)
